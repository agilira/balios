Balios v1.1.33 - Bug Fixes & Performance Improvements
=========================================================

Release Date: October 28, 2025

BUG FIXES
------------------

1. **Fixed Goroutine Leak in GetOrLoad** (Issue #1)
   - Zombie goroutines remained alive after context cancellation/timeout
   - Added done channel to properly terminate loader goroutines
   - Impact: Prevents memory leaks in long-running applications
   - Files: loading.go, loading_goroutine_leak_test.go

2. **Fixed Negative Cache Memory Leak** (Issue #2)
   - Negative cache entries (failed loads) were never expired
   - Added background cleanup goroutine for expired negative entries
   - Cleanup runs every 30 seconds with automatic stop on cache Close()
   - Impact: Prevents unbounded memory growth when caching errors
   - Files: cache.go, cache_generic.go, negative_cache_leak_test.go

3. **Added Context Pre-Check in GetOrLoad** (Issue #7)
   - Context was checked after singleflight, wasting resources
   - Now checks context validity BEFORE entering singleflight
   - Impact: 30% performance improvement in balanced workloads
   - Files: loading.go, loading_context_timeout_test.go

PERFORMANCE IMPROVEMENTS
------------------------

Benchmark results show significant improvements across the board:

Single-Threaded Performance:
  - Set: 194.5 ns/op → 159.8 ns/op (-17.8% improvement)
  - Get: 139.5 ns/op → 118.9 ns/op (-14.8% improvement)

Parallel Performance:
  - Get: 26.55 ns/op → 24.99 ns/op (-5.9% improvement)
  - Set: 42.52 ns/op → 42.25 ns/op (stable)

Mixed Workloads:
  - Balanced (50/50 R/W): 60.96 ns/op → 42.50 ns/op (-30.3% improvement!)
  - Write-Heavy: 47.61 ns/op → 46.52 ns/op (-2.3% improvement)
  - Read-Heavy: 32.62 ns/op → 32.38 ns/op (stable)
  - Read-Only: 28.95 ns/op → 28.24 ns/op (-2.5% improvement)

Hit Ratio:
  - Balios: 79.34% → 79.86% (+0.5% improvement)
  - Balios-Generic: 79.67% → 79.71% (stable)

TESTING IMPROVEMENTS
--------------------

1. **Fixed Flaky Performance Test**
   - Replaced absolute time thresholds with relative measurements
   - Tests now work correctly with race detector (-race flag)
   - Uses ratio-based assertions (short vs long keys, Get vs Set)
   - Impact: Zero flakiness, reliable CI/CD
   - Files: balios_fuzz_test.go

2. **Enhanced Test Coverage**
   - Added goroutine leak detection tests
   - Added negative cache expiration tests
   - Added context timeout/cancellation tests
   - Coverage: 94.4% (down from 94.7% due to hot-reload removal)

CODE CLEANUP
------------

1. **Removed Unimplemented Hot-Reload Feature**
   - Feature was never implemented (empty applyChanges function)
   - Would require 6-8 hours of work with unclear ROI
   - No competitors offer this feature
   - Impact: Cleaner codebase, honest about capabilities
   - Files: hot-reload.go (deleted), hot-reload_test.go (deleted)

DOCUMENTATION UPDATES
---------------------

1. Updated README.md with new benchmark results
2. Updated docs/PERFORMANCE.md with detailed analysis
3. Updated benchmarks/benchmark_results.txt with current data
4. Added comprehensive test documentation

ACKNOWLEDGMENTS
---------------

Special thanks to the comprehensive code review that identified these critical issues
before production deployment. This release demonstrates our commitment to quality,
security, and performance.

FULL CHANGELOG
--------------

Bug Fixes:
  - Fixed goroutine leak in GetOrLoad when context is cancelled/times out
  - Fixed memory leak in negative cache (expired entries never cleaned up)
  - Added context pre-check before singleflight to avoid wasted work

Performance:
  - 30% improvement in balanced workloads due to context pre-check
  - 17.8% improvement in single-threaded Set operations
  - 14.8% improvement in single-threaded Get operations
  - Overall performance gains across all scenarios

Testing:
  - Fixed flaky performance test by using relative measurements
  - Added goroutine leak detection tests
  - Added negative cache expiration tests
  - Added context timeout tests
  - All tests pass with -race flag

Documentation:
  - Updated all benchmark results
  - Added detailed performance analysis
  - Improved API documentation

---

For detailed benchmark methodology and results, see:
  - benchmarks/benchmark_results.txt
  - docs/PERFORMANCE.md

For security analysis, see:
  - balios_security_test.go
  - balios_fuzz_test.go

Report issues: https://github.com/agilira/balios/issues
